defmodule RubberDuck.Repo.Migrations.AddTimestampsToApiKeys do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:file_audits, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:operation, :text, null: false)
      add(:file_path, :text, null: false)
      add(:status, :text, null: false)
      add(:error_reason, :text)
      add(:metadata, :map, default: %{})
      add(:ip_address, :text)
      add(:user_agent, :text)
      add(:file_size, :bigint)
      add(:file_type, :text)
      add(:content_type, :text)
      add(:duration_ms, :bigint)
      add(:performed_at, :utc_datetime_usec, null: false, default: fragment("(now() AT TIME ZONE 'utc')"))

      add(
        :project_id,
        references(:projects,
          column: :id,
          name: "file_audits_project_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :delete_all
        ),
        null: false
      )

      add(
        :user_id,
        references(:users,
          column: :id,
          name: "file_audits_user_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :nilify_all
        )
      )
    end

    alter table(:api_keys) do
      add(:inserted_at, :utc_datetime_usec, null: false, default: fragment("(now() AT TIME ZONE 'utc')"))
      add(:updated_at, :utc_datetime_usec, null: false, default: fragment("(now() AT TIME ZONE 'utc')"))
    end
  end

  def down do
    alter table(:api_keys) do
      remove(:updated_at)
      remove(:inserted_at)
    end

    drop(constraint(:file_audits, "file_audits_project_id_fkey"))

    drop(constraint(:file_audits, "file_audits_user_id_fkey"))

    drop(table(:file_audits))
  end
end
