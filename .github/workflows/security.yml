name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read

jobs:
  audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: "1.18.1"
        otp-version: "27.2"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-27.2-1.18.1-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-mix-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check for vulnerable dependencies
      run: mix hex.audit

    - name: Check for retired packages
      run: |
        mix hex.outdated || true
        echo "Checking for security advisories..."

  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'rubber_duck'
        path: '.'
        format: 'HTML'
        args: >
          --enableRetired
          --enableExperimental
      continue-on-error: true

    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: "1.18.1"
        otp-version: "27.2"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-27.2-1.18.1-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-mix-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check licenses
      run: |
        echo "Checking dependency licenses..."
        mix deps.tree
        echo "All dependencies should have compatible licenses"

  secrets-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better scanning

    - name: Run Trivy security scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-results
        path: trivy-results.sarif