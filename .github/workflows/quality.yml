name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  credo:
    name: Static Code Analysis (Credo)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: "1.18.1"
        otp-version: "27.2"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-27.2-1.18.1-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-mix-

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: _build
        key: ${{ runner.os }}-27.2-1.18.1-build-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-build-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Run Credo strict mode
      run: mix credo --strict

    - name: Run Credo with explain on failure
      if: failure()
      run: mix credo explain

  format:
    name: Code Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: "1.18.1"
        otp-version: "27.2"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-27.2-1.18.1-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-mix-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check code formatting
      run: mix format --check-formatted

  documentation:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: "1.18.1"
        otp-version: "27.2"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-27.2-1.18.1-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-mix-

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: _build
        key: ${{ runner.os }}-27.2-1.18.1-build-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-build-

    - name: Restore documentation cache
      uses: actions/cache@v4
      with:
        path: doc
        key: ${{ runner.os }}-27.2-1.18.1-docs-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-27.2-1.18.1-docs-

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Generate documentation
      run: mix docs

    - name: Check for undocumented modules
      run: |
        mix compile --warnings-as-errors
        echo "Documentation generated successfully"